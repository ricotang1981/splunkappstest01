<!-- Copyright (C) 2010-2019 Sideview LLC.  All Rights Reserved. -->
<view template="dashboard.html" isVisible="False">
  <label>Custom Behavior</label>
  <module name="AccountBar" layoutPanel="appHeader" />
  <module name="AppBar" layoutPanel="appHeader" />
  <module name="SideviewUtils" layoutPanel="appHeader" />
  
  

  <module name="HTML" layoutPanel="viewHeader">
    <param name="html"><![CDATA[
    <h1>Custom Behavior</h1>
    ]]></param>
  </module>
  


  <module name="HTML" layoutPanel="panel_row1_col1">
    <param name="html"><![CDATA[

      <h2>HUGE DISCLAIMER. HIGH VOLTAGE. DO NOT TOUCH. INSTANT DEATH. $$200 FINE.</h2>
      <p>
        If and when your app or your deployment needs something a little off the map, or a little peculiar,  like if you want a couple pulldowns to vanish when a certain value is selected somewhere else on the page, these things are usually possible.  I'd bring in a consultant like myself though and even then I may try and talk you out of it. 
      </p>
      <p>
        But you can do quite a lot with custom javascript behavior that you specify over in application.js.   This has always been possible in Splunk, however with a new module called CustomBehavior it is a <b>little</b> easier, more reusable and a lot less brittle.
      </p>
    ]]></param>
  </module>

  <module name="HTML" layoutPanel="panel_row2_col1">
    <param name="html"><![CDATA[


      <p>
        Step 1: You put a "customBehavior" param on any Sideview module or you put a "CustomBehavior" module into the view somewhere specific.  Say we put a CustomBehavior module just upstream from an HTML module, and say that this CustomBehavior module itself has a customBehavior param of "constructCustomHeader".
      </p>
      <p>
        Step 2: In application.js, you have some code that looks like this:
      </p>
<pre>
// a little example that build a $$reportHeader$$ key for use by downstream modules, 
// where we needed custom logic to write the header text correctly.
if (typeof(Sideview)!="undefined") {
    Sideview.utils.declareCustomBehavior("constructCustomHeader", function(module) {
        module.getModifiedContext = function() {
            var context = this.getContext();
            var text = [];
            text.push(context.get("somePulldown.label"));
            text.push(context.get("anotherPulldown.label"));
            if (context.get("optionalThirdPulldown.value")!="*" && context.get("anotherPulldown.value")!="all") {
                text.push("split by " + context.get("optionalThirdPulldown.value"));
            }
            text.push(context.get("shared.timeRange").toConciseString());
            context.set("reportHeader", text.join(" "));
            return context;
        }
    });
}
</pre>
       <p>
         <b>WARNING: NEVER WRAP CUSTOMBEHAVIOR DECLARATIONS IN ANY EVENT HANDLERS LIKE document.ready() OR "allModulesInitialized"</b>.  CustomBehaviors should be declared immediately, as soon as application.js is loaded and run.  Never defer execution of the CustomBehavior declarations until a later point. 
       </p>
       

    ]]></param>
  </module>

  

  <module name="HTML" layoutPanel="panel_row5_col1">
    <param name="html"><![CDATA[

      Once again, don't get in over your head.  HUGE DISCLAIMER.  If you're considering something like this, don't. <a href="mailto:nick@sideviewapps.com">Contact Sideview instead</a>. If it's a good idea, it will be vastly more cost effective to bring us in to do it for you. And if it's a bad idea we'll tell you.

    ]]></param>
  </module>
  
</view>
