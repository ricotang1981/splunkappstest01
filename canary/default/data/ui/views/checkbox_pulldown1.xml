<!-- Copyright (C) 2010-2019 Sideview LLC.  All Rights Reserved. -->
<view template="dashboard.html">
  <label>the CheckboxPulldown module</label>
  <module name="AccountBar" layoutPanel="appHeader" />
  <module name="AppBar" layoutPanel="appHeader" />
  <module name="SideviewUtils" layoutPanel="appHeader" />


  <module name="HTML" layoutPanel="viewHeader">
    <param name="html"><![CDATA[
    <h1>the CheckboxPulldown module</h1>
    ]]></param>
  </module>
  
  <module name="HTML" layoutPanel="panel_row1_col1">
    <param name="html"><![CDATA[
      CheckboxPulldown is designed for when you want the user to be able to select more than one option.  The Pulldown module does have a straightforward multiple selection mode, but it uses an oldschool form element that takes up more vertical real estate. CheckboxPulldown is cooler and only takes up as much space as a normal Pulldown or TextField module. <br>
      <br>
      Generally you also want to plug in these values into a big search expression separated by ORs.  Fear not.  The module does this job pretty much automatically and does it well. 
    ]]></param>
  </module>

      <!-- EXAMPLE BEGIN -->
  <module name="Search" layoutPanel="panel_row2_col1" autoRun="True">
    <param name="search">index=_internal source="*metrics.log" group="per_sourcetype_thruput" | dedup series | sort series | fields series</param>
    <param name="earliest">-1h</param>
    <param name="latest">now</param>
    
    <module name="CheckboxPulldown">
      <param name="name">selectedSourcetypes</param>
      <param name="label">Sourcetype</param>
      <param name="template">series="$value$"</param>
      <param name="valueField">series</param>

      <module name="Search">
        <param name="search">index=_internal source="*metrics.log" group="per_sourcetype_thruput" $selectedSourcetypes$ | stats min(eps) avg(eps) max(eps) </param>
        <param name="earliest">-1h</param>
        <param name="latest">now</param>
        
        <module name="Pager">
          
          <module name="Table"></module>
        </module>
        
        <!-- this HTML module here is just to show you the token values and the search -->
        <!-- feel free to delete it -->
        <module name="HTML">
          <param name="html"><![CDATA[
            selectedSourcetypes is: <b>$selectedSourcetypes$</b><br>
            the entire search is: <b>$search$</b>
          ]]></param>
        </module>

      </module>
    </module>
  </module>
  <!-- EXAMPLE END -->

  <module name="HTML" layoutPanel="panel_row2_col2">
    <param name="html"><![CDATA[
      <h3>Notes</h3>
      <ol class="notesList">
        <li>
          CheckboxPulldown can only be used in multiple selection mode.  (If you want single selection then the checkbox elements would be pretty misleading)
        </li>
        <li>As with all Sideview form element modules,  this module shares A LOT of its functionality in common with the Pulldown module.   Make sure you have reviewed the Pulldown documentation thoroughly as features available over in Pulldown will be available here if they are relevant. 
        <li>
          If you want to tweak the format of the string that goes into the search language (ie the (field=term1 OR field=term2) term), then you should look into the  'separator' and 'outerTemplate' params.  
        </li>
        <li>The overall order to make the final search language goes like this -- <br>
          <ol type="a">
            <li>EACH of the selected elements is washed through the 'template' param.</li>
            <li>The results are all joined together using the 'separator' param The default is "+OR+"..</li>
            <li>The big string made of joined terms and ORs is then washed through the 'outerTemplate' param. The default is "( $value$ )"</li>
            <li>The final result is what gets sent downstream to the other modules.</li>
          </ol>
        </li>

        <li>
          Now, taking the example at the left, the specific config is as follows: 
        <pre>
&lt;param name="name"&gt;selectedSourcetype&lt;/param&gt;
&lt;param name="template"&gt;series="$$value$$"&lt;/param&gt;
</pre>    
        </li>

        <li>
          Now say that the user selects 'audittrail' and 'scheduler'. Here's how it plays out: 
          <ol type="a">
            <li>
              The template param kicks in. <b>scheduler</b> becomes <b>series="scheduler"</b> and <b>audittrail</b> becomes <b>series="audittrail"</b>
            </li>
            <li> 
              The default separator param kicks in and the two are combined into one string: <b>series="scheduler" OR series="audittrail"</b>
            </li>
            <li>
              The default outerTemplate param kicks in and the whole thing becomes <b>( series="scheduler" OR series="audittrail" )</b>
            </li>
            <li>
              That final value is what gets sent downstream from the Pulldown as $$selectedSourcetypes$$
            </li>
          </ol>
        </li>
        <li>
          The param "selectAllOptimization" allows you to optimize the cases where the user has selected all the available options.  This param defaults to "False" but can be set to either "*" or "omit".   When set to "*",  when the user selects all available options, instead of the large templated expression, the value sent down will be as though a single option with a value of "*" were selected.  This value is of course templated through the "template" param if present.   Likewise when set to "omit", when the user selects all available options, a blank value will be sent down. <br>
          <br>
          In all cases, the optimization will only take place when the user selects all available options, AND only when there are at least 2 available options.
        </li>
      </ol>

    ]]></param>
  </module>
</view>