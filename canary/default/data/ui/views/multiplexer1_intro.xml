<!-- Copyright (C) 2010-2019 Sideview LLC.  All Rights Reserved. -->
<view template="dashboard.html">
  <label>The Multiplexer module</label>
  <module name="AccountBar" layoutPanel="appHeader" />
  <module name="AppBar" layoutPanel="appHeader" />
  <module name="SideviewUtils" layoutPanel="appHeader" />
  
  <module name="HTML" layoutPanel="viewHeader">
    <param name="html"><![CDATA[
    <h1>The Multiplexer module</h1>
    ]]></param>
  </module>
  
  <module name="HTML" layoutPanel="panel_row1_col1">
    <param name="html"><![CDATA[
      The Multiplexer module is a very advanced module. You should only use it sparingly.  When you need it however, it can do some truly amazing things. <br>
      <br>
      Here's the basic idea.  You have:<br>
      <b>1)</b> an arbitrary chunk of view XML,  like say a header plus a chart plus a drilldown. <br>
      <b>2)</b> a search that gives you a set of distinct values for a particular field. <br>
      <br>
      And you can clone ALL of the view XML in #1,  for EACH of the values of your field in #2.<br>
      <br>
      Let's take an example - say each the number of servers you have to keep track of on a dashboard is different.   You want a dashboard that will have 1 chart or 1 table PER SERVER, and you do not want to rewrite the dashboard every day.  This is a case for Multiplexer.
      <br>
      <br>
      <h2>How it works</h2>
      <ol>
        <li>You put in a Search module with a search whose results have the field you wish to "multiplex"
        <li>You put <b>one</b> Multiplexer module downstream from that Search module.   
        <li>You give Multiplexer a "field" param that matches the relevant field in those search results. 
        <li>You give Multiplexer one child module, and then you can give that one child module any number of descendant modules in any configuration.    
      </ol>
      Then at runtime the Multiplexer module looks at the values of the field you configured, and it clones out the modules it sees underneath -- one set of cloned modules for each value of the field. 
      ]]></param>
  </module>
  
  <module name="HTML" layoutPanel="panel_row2_col1">
    <param name="html"><![CDATA[
      <h2>Starting out with a simple example - one HTML module as a child...</h2> 
      <br clear="all">
    ]]></param>
  </module>

  <!-- BEGIN EXAMPLE -->
  <module name="Search" layoutPanel="panel_row2_col1" autoRun="True">
    <param name="search">index=_internal source=*metrics.log group=per_sourcetype_thruput | stats sum(kb) as totalKB by series | rename series as sourcetype</param>
    <param name="earliest">-15m</param>
    <param name="latest">now</param>

    <module name="ProgressIndicator" />

    <module name="Multiplexer">
      <param name="fields">sourcetype</param>
      
      <module name="HTML">
        <param name="html"><![CDATA[
          <div class="valueDisplay">
            <div class="inner">sourcetype <b>$sourcetype$</b></div>
          </div>
        ]]></param>
      </module>
    </module>
  </module>
  <!-- EXAMPLE END -->


  <module name="HTML" layoutPanel="panel_row3_col1">
    <param name="html"><![CDATA[
      <h2>Next example - Multiplexing with more than one field </h2> 
      <br clear="all">
    ]]></param>
  </module>
      

  <!-- BEGIN EXAMPLE -->
  <module name="Search" layoutPanel="panel_row3_col1" autoRun="True">
    <param name="search">index=_internal source=*metrics.log group=per_sourcetype_thruput | stats sum(kb) as totalKB by series | rename series as sourcetype</param>
    <param name="earliest">-15m</param>
    <param name="latest">now</param>

    <module name="ProgressIndicator" />

    <module name="Multiplexer">
      <param name="fields">sourcetype,totalKB</param>
      <module name="HTML">
        <param name="html"><![CDATA[
          <b>$sourcetype$</b> ($totalKB$ KB indexed)
        ]]></param>
      </module>
    </module>
  </module>
  <!-- END EXAMPLE -->




  <module name="HTML" layoutPanel="panel_row4_col1">
    <param name="html"><![CDATA[
      <h2>Next example - Multiplexing with more than one field and using CSS to drive dynamc background color</h2> 
      <br clear="all">
    ]]></param>
  </module>
      

  <!-- BEGIN EXAMPLE -->
  <module name="Search" layoutPanel="panel_row4_col1" autoRun="True">
    <param name="search">index=_internal source=*metrics.log group=per_sourcetype_thruput | stats sum(kb) as KB by series | rename series as sourcetype | rangemap field=KB low=0-100 guarded=100-1000 elevated=1000-10000 high=10000-100000 severe=100000-100000000000000</param>
    <param name="earliest">-15m</param>
    <param name="latest">now</param>

    <module name="ProgressIndicator" />

    <module name="Multiplexer">
      <param name="fields">sourcetype,totalKB,range</param>
      <module name="HTML">
        <param name="html"><![CDATA[
          <div class="valueDisplay">
            <div class="inner $range$">sourcetype <b>$sourcetype$</b> ($totalKB$ KB indexed)</div>
          </div>
        ]]></param>
      </module>
    </module>
  </module>
  <!-- END EXAMPLE -->

  <module name="HTML" layoutPanel="panel_row2_col2">
    <param name="html"><![CDATA[
      <h3>Notes</h3>
      <ol class="notesList">
        <li>
          On the cloned view XML config, layoutPanel attributes and autoRun attributes will be ignored. For the purposes of layout all modules will be written out inline immediately after the Multiplexer module itself.   For non-trivial layout needs you will have to use custom CSS. 
        </li>
        <li>
          NOTE that you cannot Multiplex a FlashChart module, due to some complexity in the FlashModule's code. Although we might revisit this someday and fix it, in the meantime you should use JSChart instead.
        </li>
        <li>
          In versions 2.6.3 and prior, Multiplexer could only accept a single field in it's "field" param.  These days the "fields" param obsoletes the "field" param, and you can set as many fields as you like. For each search result row and thus for each multiplexed set of modules,   all of the field values for the given search result row will be available as $fieldName$ tokens.  Note that you also have $fieldName.rawValue$ if you don't want certain characters like backslashes and double quotes escaped. 
        <li>
          Read the specification for the Sideview module: <a href="/modules#Splunk.Module.Multiplexer" target="_blank">Multiplexer and its params</a>
        </li>

      </ol>
    ]]></param>
  </module>

</view>