# Copyright (C) 2010-2019 Sideview LLC.  All Rights Reserved.
[module]
className = Redirector
forbidsDownstreamModules = True

description = This module offers a simpler mechanism for taking the user's input on a given page and redirecting them to another URL that includes elements of that input in the URL itself or in parameters passed to that URL. Make sure to read all documentation within the Sideview Utils app for many more key details.  

[param:url]
required = False
label = The URL to which the user should be redirected when data hits this module.  NOTE: this will commonly be a simple relative URL, as simple as "<viewName>".  The value can contain $foo$ tokens and then if there is an upstream UI element setting a key called 'foo', the value will be substituted.  Otherwise the $foo$ will be replaced with an emptrystring.  For more complex cases the ValueSetter can often wire up simple conditional use cases, and if that's not enough you can just use a customBehavior and define what you want from application.js

[param:popup]
required = False
default = False
label = Whether or not the given URL should be displayed in a popup window (True), or in the current window (False)
values = True, False

[param:target]
required = False
label = This can be used to tell the Redirector to reuse an existing named window. The value passed to the param is the window name. Note that this cannot be used to open a new window in a *tab*. The determination of whether links are opened in new tabs or new windows can only be set by the user themselves in their browser settings.

[param:windowFeatures]
required = False
label = This can be used to set the windowFeatures arguments to the window.open function, whenever that function is called.  Generally you can leave this unset.  If unset and you're setting the "popup" param to True, then the default will be "resizable=yes,status=no,scrollbars=yes,toolbar=no".  On the other hand if you're using the "target" param then the default will be "resizable=yes,status=yes,scrollbars=yes,toolbar=yes".

[param:arg.*]
required = False
label = You can set any number of querystring arguments by setting params of "arg.foo", "arg.bar" ,etc. If there are any $foo$ tokens in these values they will be replaced with values from the upstream context.  You can combine multiple $foo$ tokens in a single arg, and the name of the arg itself can be dynamic.  Note that the 'arg.' portion does not get reflected anywhere in the URL.

[param:mergeDrilldownKeys]
required = False
default = True
values = True,False
label = Leave this unset. Default is True, which means that when the module finds itself underneath one or more tables/charts being used for inline-drilldown, and those tables/charts are under one or more Sideview "Report" modules, then...  (ok catch your breath).  Then the Redirector module will follow all the logic being used in the reports, and it will automatically merge the "click.value", "click.name2" args and all that, back into the "arg.fieldName", "arg.someOtherFieldName" keys.   NOTE:  you MUST follow the convention whereby the arg names, the 'name' attributes on your UI modules, and the field names in the search-language are all identical.  IE if you have a field called "my_extracted_field",  then make sure that the TextField holding it has a "name" param of "my_extracted_field".   If you for some reason try and have non-mapping names here, this logic won't work correctly. 

[param:generalSearchTermField]
required = False
label = If set, then you must also have this listed as one of the 'arg' params.  If set, and the module finds itself under a table or chart, that is then underneath a Sideview "Report" module, then in certain situations when appropriate,  the given 'general search terms' field will have one or more search terms added to it's current value. This is also the mechanism by which views can allow users to drilldown even on NULL or OTHER when those terms appear in "split-by" charts.

[param:autoDrilldown]
required = False
default = False
values = True,False
label = Only set this to true if ALL OF THE FOLLOWING ARE TRUE.  a) you are using the 'generalSearchTerm' param.  b) you are using the 'mergeDrilldownKeys' param.  c) you really know what you're doing.  d) the generalSearchTerm field contains both the base search, AND the subsequent pipes of the reporting commands.   Setting this to True will make the automatic drilldown behavior throw away the stats/chart/timechart/top/rare before adding the automatically determined group-by and split-by search terms to the generalSearchTerm value on drilldown.     e) You understand everything that I've just said.  f) You still feel like you know what you're doing.


[param:fillExplicitAllTimeArgs]
required = False
default = True
label = It is not advised to set this to False.  Instead leave it unset and don't think about it.  Don't even look at it.  However someday, in some strange cases where you are using an older Splunk instance, *and* you need to use Redirector to send the user to a view and that view DOESN'T use Sideview Utils, you might need this.   This param will come in handy in these corner cases.  What setting this to False does is it tells Redirector NOT to substitute earliest=all and/or latest=all when it sees 'all time' timeranges.  If you don't fully understand everything that I just said, leave this unset. 
values = True,False

[param:customBehavior]
required = False
label = You can define custom behaviors by using Sideview.utils.declareCustomBehavior(behaviorName, callback). See the general comments about what this all means in the CustomBehavior module.
