# Copyright (C) 2010-2019 Sideview LLC.  All Rights Reserved.

[module]
className = Gate

description = The Gate module is useful in two different ways, although fairly often both ways are needed together.  First, you can use the module to hide certain modules on the page until the user makes one or more important form element selections.  Then when the form elements have something selected,  the hidden modules are shown , the pushes can proceed downstream past the Gate, thus your main searches there will dispatch.  The other useful way to use a Gate is to basically teleport a push from one Gate module to another Gate module.   This can get around the "one parent" limitation and this opens up a whole class of interactive dashboards that were previously impossible to create in the Splunk UI.

[param:id]
required = False
label = If set,  this value can be used in the "to" param of other Gate modules on the same page,  so as to propagate pushes from those Gate modules to the one with the given id.   If a Gate module has an id param then it MUST have one or more modules downstream from itself. 

[param:to]
required = False
label = If set, this specifies the id of a second Gate module, to which pushes from the given point should be propagated.  If a Gate module has a "to" param set, then it must NOT have any modules downstream from itself.

[param:requiredKeys]
required = False
label = If set, then pushes will not be allowed to propagate down past the Gate module until the field or fields specified here have non-null or non-emptystring values.

[param:customBehavior]
required = False
label = You can define custom behaviors by using Sideview.utils.declareCustomBehavior(behaviorName, callback). See the general comments about what this all means in the CustomBehavior module.


