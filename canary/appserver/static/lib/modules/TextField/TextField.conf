# Copyright (C) 2010-2019 Sideview LLC.  All Rights Reserved.

[module]
className = TextField
requiresDownstreamModules = True


description = This module puts a text input field on the page. the field can have an optional label next to it. The value of this text input field is then entered into the context object and thus made available to other downstream modules. Make sure to read all documentation within the Sideview Utils app for many more key details.  

[param:label]
required = False
label = This gives the module a label just to the left of the text field. Optional. NOTE: If the label begins and ends with "$" characters, ie "$foo$", then it will be set from a corresponding variable in the URL. If that variable is absent, the label will be empty.  If "$" characters are present in any other configuration besides the first character and last character, the substitution will not work at all.
translate = string

[param:name]
required = False
default = selection
label = If this is set to 'user', then downstream modules will be able to use $user.value$ and $user.label$ in searches and headers.

[param:default]
required = False
default = 
label = This determines the value that appears in the text field by default.  

[param:customBehavior]
required = False
label = You can define custom behaviors by using Sideview.utils.declareCustomBehavior(behaviorName, callback); See the general comments about what this all means in the CustomBehavior module.

[param:cssClass]
required = False
label = When present, this value will be used as the CSS class on the given module. 

[param:float]
required = False
label = This allows you to put float behavior on the module.

[param:template]
required = False
label = This allows you to wrap the values in other text.  For example: given a name param of 'user', <param name="template">$name$="$value$"</param> will turn the module's effective output into user="bob".  Any backslashes in the actual $value$ will get backslash-escaped but the rest of the template string WILL NOT.  

[param:width]
required = False
label = This allows you to set the width of the input field in pixels or percent or em's or whatever works for you.  If left blank the module will have no width CSS set at all, except that which might apply from external css files like application.css.

[param:rows]
required = False
default = 1
label = if set to an integer greater than 1,  then the TextField will present a multiline input instead of the normal single-line textfield.   This can be then used for inputs where carriage-returns in the input are for some reason desirable or necessary.  If the user ends up entering more carriage returns than the size value, the control will get vertical scrollbars but the control will not automatically expand.  (we may implement some auto-expand functionality in the future. In such a mode the rows param would remain relevant but it would become just the minimum number to display.)

[param:pushDownstreamOnEnterKey]
required = False
default= True
values = True,False
label = this is just here in case someone wants to turn off the default behavior of having enter/return keypresses push the data downstream.  You might want to turn this off for instance if you're using a rows=N TextField as a "notes" field and the user might hit return cheerfully while entering in their notes. 