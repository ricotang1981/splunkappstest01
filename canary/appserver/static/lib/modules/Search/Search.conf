# Copyright (C) 2010-2019 Sideview LLC.  All Rights Reserved.
[module]
className = Search
requiresDownstreamModules = True


description = This module allows you can specify search language for splunkd to run in your view. In the simplest usage you can set a static search to be run.   However, you can incorporate dynamic input from other modules 'upstream', simply by using the appropriate $foo$ tokens in your search. Make sure to read all of the pages of documentation and working examples within the Sideview Utils app for many more key details.  Navigate to the Sideview Utils app from the app menu in the Splunk UI.

[param:search]
required = False
label = The literal search string passed on to other modules downstream.  For any $foo$ elements within this search string, if there is a matching value in the Splunk Context object, the $foo$ will be replaced by that value.  If there is no such value in the context, it will be replaced with emptystring.

[param:earliest]
required = False
label = As you would expect, this sets the earliest side of the time range to search over. This param will do $foo$ substitution so you can set the timerange using any value set by an upstream module.  NOTE however, that if you want to use the timerange from the TimeRangePicker module, just leave this param unset.  Do NOT set it to $search.timeRange.earliest$ (no matter how sensible that might seem to you).

[param:latest]
required = False
label = As you would expect, this sets the latest side of the time range to search over. This param will do $foo$ substitution so you can set the timerange using any value set by an upstream module.  NOTE however that if you want to use the timerange from the TimeRangePicker module, just leave this param unset.  do NOT set it to $search.timeRange.latest$ (no matter how sensible that might seem).

[param:preview]
required = False
label = This allows you to set the "preview" mode on the job either on or off, from the very outset. Prior to this param existing you had to embed an awkward "EnablePreview" module into your view.  Note that there is an "auto" setting which will turn on preview if statusBuckets is greater than 0 and leave it off otherwise.
values = True,False,Auto
default = False

[param:maxTime]
required = False
label = This can be used to tell splunkd to auto-finalize this search once N seconds have gone by.

[param:customBehavior]
required = False
label = You can define custom behaviors by using Sideview.utils.declareCustomBehavior(behaviorName, callback)./ See the general comments about what this all means in the CustomBehavior module.
