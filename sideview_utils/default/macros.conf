[get_base_data_for_explorer]
definition = index=_internal source=*metrics.log group="per_*_thruput"

[filterable_fields]
definition = group series 

[numeric_fields]
definition = eps kb kbps ev avg_age max_age

[conversions]
definition = *




[get_fields_for_explore_pulldowns(3)]
args = filterable_fields,numeric_fields,fields_already_used
definition =  | fields $filterable_fields$ $numeric_fields$ | stats dc(*) as * | fields $filterable_fields$ $numeric_fields$ | transpose | rename "row 1" as "count" column as field | dedup field | eval label=field + " (" + count + ")" | `remove_rows_used_in_filters("$fields_already_used$")` 

[get_fields_for_report_pulldowns]
definition =  | stats dc(*) as * | transpose | rename "row 1" as "count" column as field | eval label=field + " (" + count + ")" | table field label

[remove_rows_used_in_filters(1)]
args = filters.fields
definition = search *  [ | stats count | eval field="nonexistent_field,$filters.fields$" | fields - count | eval field=split(field,",") | mvexpand field | format "" "NOT" "" "" "" ""]



# static resultset of all fields::
#| stats count | fields - count | fields `filterable_fields` | transpose | eval type="filterable" | append [| stats count | fields - count | fields `numeric_fields` | transpose | eval type="numeric"] | stats values(type) as type by column

##| inputcsv ba.csv 
#| eval foo=split("1,2,3,4,5,6,7",",") | mvexpand foo | eval floor=replace(floor,"1",foo) 
#| eval foo=split("1,2,3,4",",") | mvexpand foo | eval building=replace(building,"1",foo) 
#| eval foo=split("1,2,3,4,5,6",",") | mvexpand foo | eval campus=replace(campus,"1",foo) 
#| eval foo=split("1,2,3,4,5,6",",") | mvexpand foo | eval timestamp=timestamp+(foo*100)
#| sort + timestamp
#| fields - foo | fields timestamp * | outputcsv ba_sample.csv
