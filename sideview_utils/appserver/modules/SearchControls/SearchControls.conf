# Copyright (C) 2010-2018 Sideview LLC.  All Rights Reserved.

[module]
className = Splunk.Module.SearchControls
superClass = Splunk.Module.DispatchingModule

description = Replacement module for JobStatus module.  Can be configured to show only a subset of its buttons and menus.  Can be configured to reorder those buttons and menus.  Also unlike the JobStatus module one of the available options is an export button.


[param:sections]
required = False
default = jobControls info export print saveMenu createMenu
label = This allows you to set which of the top level sections of controls you have, the total options being 'jobControls', 'info', 'print', 'saveMenu', 'createMenu' and 'export'.   The items are listed as a space-separated string, and the order in which they appear in the interface is determined by their order in that string.  


[param:jobControls]
required = False
default = background pause finalize cancel
label = If the 'jobControls' section is one of the space-separated values in your 'sections' param,  this controls exactly which of the 4 job controls you would like to have there,  and which order you'd like them to be in.  The order can be changed and the buttons will continue to be grouped together with the appropriate rounded-corner CSS.


[param:saveMenu]
required = False
default = saveSearch saveResults saveAndShareResults
label = If the 'saveMenu' section is one of the space-separated values in your 'sections' param,  this controls what the menu options should be under 'Save'.   Enter a space-separated list of tokens.  Note that the only working tokens currently are those specified as the default value. However you can configure just a subset of those, and you can change the order. 

[param:createMenu]
required = False
default = createDashboardPanel createAlert createEventType createScheduledSearch
label = If the 'createMenu' section is one of the space-separated values in your 'sections' param,  this controls what the menu options should be under 'create'.   Enter a space-separated list of tokens.  Note that the only working tokens currently are those specified as the default value. However you can configure just a subset of those, and you can change the order. 

[param:float]
required = False
values = left,right,none
label = optional param.  You can set this to left or right and it will float the module accordingly.  Refer to "css float" in google for more information.
default = none

[param:clear]
required = False
label = This allows you to clear floating behavior that modules above might have been given.


[param:cssClass]
required = False
label = When present, this value will be used as the CSS class on the given module. 