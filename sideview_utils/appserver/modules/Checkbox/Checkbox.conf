# Copyright (C) 2010-2018 Sideview LLC.  All Rights Reserved.

[module]
className = Splunk.Module.Checkbox
superClass = Splunk.Module

description = This module puts a single checkbox field on the page.   The checkbox field can have an label.  The module can be configured to pass different values downstream to other modules, depending on whether the checkbox is checked.  You can set onValue and leave offValue unset, or vice versa,  or you can set both.

[param:label]
required = False
label = This gives the module a label just to the left of the checkbox. Optional. NOTE: If the label begins and ends with "$" characters, ie "$foo$", then it will be set from a corresponding variable in the URL. If that variable is absent, the label will be empty.  If "$" characters are present in any other configuration besides first character and last character the substitution will not work at all.
translate = string

[param:labelPosition]
required = False
default = left
values=left,right
label = This determines whether the label should be on the left of the checkbox (default), or on the right.

[param:name]
required = False
default = checkbox
label = If this is set to 'user', then downstream modules will be able to user $user.value$ and $user.label$ in searches and headers, and javascript can use context.get("user.element") to get the actual <option> element.  Likewise if the un-templated version of the value is required, use $user.rawValue$ (see the 'template' param).

[param:onValue]
required = False
label = This determines what the value of the downstream token should be when the checkbox is checked.  You don't have to specify both onValue and offValue, but you have to specify at least one.

[param:offValue]
required = False
label = This determines what the value of the downstream token should be when the checkbox is unchecked. You don't have to specify both onValue and offValue, but you have to specify at least one.

[param:customBehavior]
required = False
label = You can define custom behaviors by using Sideview.utils.declareCustomBehavior(behaviorName, callback). See the general comments about what this all means in the CustomBehavior module.

[param:cssClass]
required = False
label = When present, this value will be used as the CSS class on the given module. 

[param:float]
required = False
label = This allows you to put float behavior on the module.

[param:clear]
required = False
label = This allows you to clear floating behavior that modules above might have been given.

[param:checked]
required = False
default = False
values=True,False