# Copyright (C) 2010-2018 Sideview LLC.  All Rights Reserved.

[module]
className = Splunk.Module.Button
superClass = Splunk.Module

description = This is a simple button module.  Make sure to read all of the pages of documentation and working examples within the Sideview Utils app for all key details.  Navigate to the Sideview Utils app from the app menu in the Splunk UI.


[param:label]
required = False
label = If set, this value will become the text inside the button.  If left unset the button will be a smaller button with a right-facing arrow inside it.
translate = string

[param:customBehavior]
required = False
label = You can define custom behaviors by using Sideview.utils.declareCustomBehavior(behaviorName, callback); See the general comments about what this all means in the CustomBehavior module.

[param:cssClass]
required = False
label = When present, this value will be used as the CSS class on the given module. 

[param:allowSoftSubmit]
required = False
default = False
values = True,False
label = This determines whether pushes started by modules upstream will be allowed to pass through to the modules downstream from the Button.  If true,  then hitting return in a TextField or changing the selected option in a Pulldown, will cascade down through the Button automatically.  If false (or if omitted since false is the default) the user will have to click the green button. 

[param:allowAutoSubmit]
required = False
default = True
label = This determines whether pushes started by autoRun="True" will be allowed to pass through to the modules downstream from the button.  If true, then the searches will dispatch and autoRun will take effect just as though the Button module was not there.  If false, initial page load pushes from autoRun="True" will not pass down through the button.


