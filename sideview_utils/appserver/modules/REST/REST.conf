# Copyright (C) 2010-2018 Sideview LLC.  All Rights Reserved.

[module]
className = Splunk.Module.REST
superClass =  Splunk.Module

description = This PROTOTYPE module is designed for simple cases where content including $foo$ tokens need to be posted to the Splunk rest api. Currently only POST and DELETE are supported.

[param:customBehavior]
required = False
label = You can define custom behaviors by using Sideview.utils.declareCustomBehavior(behaviorName, callback). See the general comments about what this all means in the CustomBehavior module.

[param:uri]
required = True
label = this is the URI to which the module will post when context data is received.

[param:arg.*]
required = False
label = By default the module will send a basic JSON dictionary and all listed arg.* in the XML config will be sent as the key/value pairs of that dict.

[param:method]
required = False
default = post
values = post,delete
label = This module is designed to really flip something, and then give just a success/failure determination afterwards, communicated typically by a switcher showing one of two downstream branches of modules.   As such if you're looking for a GET method here... you should probably just be using the Spluink rest command in the search language.

[param:name]
required = False
default = REST
label = this determines the prefix of the $foo$ token(s) that the module sends downstream.   For example $REST.success$  which can be true or false.  If you are chaining together multiple REST modules you might need to report on success or failure slightly differently for each. 
