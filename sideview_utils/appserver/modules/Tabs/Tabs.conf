# Copyright (C) 2010-2018 Sideview LLC.  All Rights Reserved.

[module]
className = Splunk.Module.Tabs
superClass = Splunk.Module.DispatchingModule

description = This is designed to be a list of "tabs" that can either pull their values from a search or from a statically defined list.   This module gets its data from the "main context" search just like any other data-rendering module.  Think of it as a drilldown-enabled SimpleResultsTable module that happens to look like a set of tabs and it'll make sense. Make sure to read all documentation within the Sideview Utils app for many more key details.  

[param:valueField]
required = False
label = When configuring Tabs to render its individual tabs using the results of a search, this param specifies the field to use for the value of the selected tab.  Note that you can use "$name$" as the value if you want to to refer automatically to the value of the "name" param.

[param:labelField]
required = False
label = When configuring Tabs to render it's individual tabs using the results of a search, this param specifies the field to use for the label of the tab.  This param can be omitted, in which case the valueField will be used.

[param:staticTabs]
required = False
label = Use this to set zero, one or more "static" values and labels to render as tabs.  Often this param is set, and valueField and labelField are NOT set, yielding a purely static set of tabs. 

[param:name]
required = True
label = If this is set to 'selectedTab', then downstream modules will be able to use $selectedTab.value$ and $selectedTab.label$ in searches and headers, and javascript can use context.get("selectedTab.element") to get the actual <div> element of the tab.  Likewise if the un-templated version of the value is required, use $selectedTab.rawValue$ (see the 'template' param).

[param:postProcess]
required = False
label = This denotes any postProcess search that should be run against the current results when the module requests its data (to fill its options).  Use $postProcess$ in the value to refer to any postProcess value that may have been provided from upstream modules. Use $name$ to refer to the value entered for the 'name' param. Very commonly, this param will have a value of "$postProcess$ | dedup $name$ | sort $name$".

[param:requiredFields]
required = False
label = If there are fields needed in the search used to render the pulldown, they will need to be specified here or Splunk might not extract and summarize them.  If left blank there is an implicit default that amounts to the field names referenced by valueField and labelField,  or if present, those used for 'value' and 'label' in the searchFieldsToDisplay param.

[param:customBehavior]
required = False
label = You can define custom behaviors by using Sideview.utils.declareCustomBehavior(behaviorName, callback). See the general comments about what this all means in the CustomBehavior module.

[param:cssClass]
required = False
label = When present, this value will be used as the CSS class on the given module. 

[param:template]
required = False
label = This allows you to wrap the values in other text.  For example: given a name param of 'selectedTab', <param name="template">$name$="$value$"</param> will turn the module's effective output into selectedTab="bob".  Any backslashes in the actual $value$ will get backslash-escaped, but the rest of the template string WILL NOT.  

[param:count]
required = False
default = 20
label = This sets a ceiling on the number of dynamic tab <div> elements that the pulldown is allowed to generate dynamically.

